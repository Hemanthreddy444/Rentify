Server.js
const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();

// Middleware
app.use(bodyParser.json());
app.use(cors());

// MongoDB connection
mongoose.connect('mongodb://localhost/rentify', { useNewUrlParser: true, useUnifiedTopology: true });

// User schema
const userSchema = new mongoose.Schema({
    firstName: String,
    lastName: String,
    email: String,
    phone: String,
    role: String
});

const propertySchema = new mongoose.Schema({
    title: String,
    area: String,
    bedrooms: String,
    bathrooms: String,
    nearby: String,
    postedBy: String
});

const User = mongoose.model('User', userSchema);
const Property = mongoose.model('Property', propertySchema);

// Routes
app.post('/api/register', async (req, res) => {
    const newUser = new User(req.body);
    await newUser.save();
    res.send(newUser);
});

app.post('/api/properties', async (req, res) => {
    const newProperty = new Property(req.body);
    await newProperty.save();
    res.send(newProperty);
});

app.get('/api/properties', async (req, res) => {
    const properties = await Property.find();
    res.send(properties);
});

// Start the server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
